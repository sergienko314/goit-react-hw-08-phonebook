{"version":3,"file":"static/js/354.b4e3e55f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts-list/Contacts-list.module.css?1416","components/Contacts-list/Contacts-list.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.css?b217","pages/ContactPage/ContactPage.jsx"],"sourcesContent":["export const selectContact = state => state.contacts.contacts;\nexport const selectEdit = state => state.contacts.editContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/slice';\nimport s from './Filter.module.css';\n\nexport const FilterList = () => {\n    const [queryParams, setQueryParams] = useSearchParams();\n    const contacts = useSelector(selectContact);\n    const dispatch = useDispatch();\n\n    const onFilterChange = e => {\n        const value = e.target.value.trim();\n\n        dispatch(setFilter(value));\n        setQueryParams(value === '' ? {} : { query: value });\n    };\n\n    if (contacts.length === 0) {\n        return;\n    };\n\n    return (\n        <label className='label'>\n            <span className={s.label}>Find contacts by name</span>\n            <input\n                className={s.input}\n                onChange={onFilterChange}\n                type=\"text\"\n                value={queryParams.value}\n                name=\"filter\"\n                placeholder=\"Start typing the name...\"\n            />\n        </label>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts-list_wrapper__4cfoZ\",\"list\":\"Contacts-list_list__f9BVg\",\"item\":\"Contacts-list_item__leVYG\",\"text\":\"Contacts-list_text__dStqy\",\"tel\":\"Contacts-list_tel__c1YFg\",\"btnEd\":\"Contacts-list_btnEd__ioJ0J\",\"btnDel\":\"Contacts-list_btnDel__4gAfT\",\"btn\":\"Contacts-list_btn__9SrUC\"};","import { useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { selectAuth } from 'redux/auth/selectors';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport s from './Contacts-list.module.css';\nimport { editeNewContact } from 'redux/contacts/slice';\nimport { AccountBox, Create } from '@mui/icons-material';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContact);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  const status = useSelector(selectAuth);\n\n  const filteredContacts = useMemo(() => {\n    return contacts.length\n      ? contacts.filter(({ name }) => {\n          return name.toLowerCase().includes(filter.toLowerCase());\n        })\n      : [];\n  }, [contacts, filter]);\n\n  useEffect(() => {\n    if (status) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, status]);\n\n  const elements = filteredContacts.map(({ id, name, number }) => (\n    <li className={s.item} key={id}>\n      <p className={s.text}>\n        <AccountBox sx={{ fontSize: 20, marginRight: 1 }} />\n        {name}\n      </p>\n      <p className={s.tel}>Tel: {number}</p>\n      <Button\n        className={s.btnDel}\n        variant=\"contained\"\n        startIcon={<DeleteIcon />}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </Button>\n      <Button\n        className={s.btnEd}\n        startIcon={<Create />}\n        variant=\"contained\"\n        type=\"button\"\n        onClick={() => dispatch(editeNewContact({ id, name, number }))}\n      >\n        Edit\n      </Button>\n    </li>\n  ));\n\n  return (\n    <div className={s.wrapper}>\n      <ul className={s.list}>{elements}</ul>\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      userName: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"btn\":\"Form_btn__0ebGo\"};","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { addContact, updateContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContact, selectEdit } from 'redux/contacts/selectors';\nimport Button from '@mui/material/Button';\nimport s from './Form.module.css';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n  const editContact = useSelector(selectEdit)\n    \n    useEffect(() => {\n        if(editContact){ setName(editContact.name)\n        setNumber(editContact.number)}\n       \n    }, [editContact])\n  \n  \n  const onInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log(value + \"is not a valid value\");\n    }\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const hasUserContacts = contacts.some(user => user.name === name);\n    \n    if (hasUserContacts) {\n      toast.warning(`${name} is already in contacts!`);\n      return;\n    };\n    \n     editContact ? dispatch(updateContact({...{name, number}, id:editContact.id})) : dispatch(addContact({name, number}));\n    formReset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={onFormSubmit}>\n      <label>\n        <span className={s.label}>Name</span>\n        <input\n          className={s.input}\n          onChange={onInputChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter new name...\"\n          required\n        />\n      </label>\n      <label>\n        <span className={s.label}>Number</span>\n        <input\n          className={s.input}\n          onChange={onInputChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter phone number...\"\n          required\n        />\n      </label>\n      <Button\n          className={s.btn}\n          disabled={!name || !number}\n          variant=\"contained\"\n          type=\"submit\"\n        >\n          <span>Save</span>\n        </Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactPage_wrapper__Csj47\"};","import { FilterList } from \"components/Filter/Filter\";\nimport { ContactsList } from \"components/Contacts-list\";\nimport {Form} from 'components/Form/Form';\n\nimport s from './ContactPage.module.css';\n\nconst ContactPage = () => {\n    return (\n            <main className={s.wrapper}>\n                <Form />\n                <FilterList />\n                <ContactsList />\n            </main>\n    );\n};\n\nexport default ContactPage;\n"],"names":["selectContact","state","contacts","selectEdit","editContact","FilterList","useSearchParams","queryParams","setQueryParams","useSelector","dispatch","useDispatch","length","className","s","onChange","e","value","target","trim","setFilter","query","type","name","placeholder","ContactsList","filter","status","selectAuth","filteredContacts","useMemo","toLowerCase","includes","useEffect","fetchContacts","elements","map","id","number","AccountBox","sx","fontSize","marginRight","Button","variant","startIcon","Delete","onClick","deleteContact","Create","editeNewContact","Form","useState","setName","setNumber","onInputChange","console","log","onSubmit","preventDefault","some","user","toast","updateContact","addContact","pattern","title","required","disabled"],"sourceRoot":""}